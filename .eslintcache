[{"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\index.js":"1","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\App.js":"2","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\reportWebVitals.js":"3","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\services\\Auth.js":"4","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Login.js":"5","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\SignUp.js":"6","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Home.js":"7","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\services\\PrivateRoute.js":"8","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\services\\FBase.js":"9","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Search.js":"10","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Camera.js":"11","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\NavBar.js":"12","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\TopBar.js":"13","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\TopBarBack.js":"14","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\CreateArtist.js":"15","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Upload.js":"16","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Upload2D.js":"17","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Upload3D.js":"18","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\Modal.js":"19","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\Ar.js":"20","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\serviceWorkerRegistration.js":"21"},{"size":631,"mtime":1617734300401,"results":"22","hashOfConfig":"23"},{"size":2535,"mtime":1617815482260,"results":"24","hashOfConfig":"23"},{"size":375,"mtime":1612212869587,"results":"25","hashOfConfig":"23"},{"size":1097,"mtime":1617105636298,"results":"26","hashOfConfig":"23"},{"size":2451,"mtime":1617985413979,"results":"27","hashOfConfig":"23"},{"size":2697,"mtime":1620071903388,"results":"28","hashOfConfig":"23"},{"size":2914,"mtime":1618856104133,"results":"29","hashOfConfig":"23"},{"size":646,"mtime":1618861802957,"results":"30","hashOfConfig":"23"},{"size":585,"mtime":1613593009077,"results":"31","hashOfConfig":"23"},{"size":9677,"mtime":1618654488847,"results":"32","hashOfConfig":"23"},{"size":18764,"mtime":1620233129286,"results":"33","hashOfConfig":"23"},{"size":1403,"mtime":1617814298503,"results":"34","hashOfConfig":"23"},{"size":2846,"mtime":1617976938453,"results":"35","hashOfConfig":"23"},{"size":574,"mtime":1617896203437,"results":"36","hashOfConfig":"23"},{"size":5179,"mtime":1613380387058,"results":"37","hashOfConfig":"23"},{"size":2466,"mtime":1618695584554,"results":"38","hashOfConfig":"23"},{"size":7719,"mtime":1620480926836,"results":"39","hashOfConfig":"23"},{"size":21450,"mtime":1620483320617,"results":"40","hashOfConfig":"23"},{"size":7629,"mtime":1618653454751,"results":"41","hashOfConfig":"23"},{"size":2663,"mtime":1620312889124,"results":"42","hashOfConfig":"23"},{"size":5064,"mtime":499162500000,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"ov9imx",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\index.js",[],["89","90"],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\App.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\reportWebVitals.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\services\\Auth.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Login.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\SignUp.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Home.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\services\\PrivateRoute.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\services\\FBase.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Search.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Camera.js",["91","92"],"import React, { useState, useContext, useEffect } from \"react\";\r\nimport Webcam from \"react-webcam\";\r\nimport CAMERA1 from \"../assets/img/CAMERA1.jpg\";\r\nimport CAMERA2 from \"../assets/img/CAMERA2.jpg\";\r\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\r\nimport { AuthContext } from \"../services/Auth\";\r\nimport {\r\n  Box,\r\n  makeStyles,\r\n  IconButton,\r\n  Fab,\r\n  CardContent,\r\n  Card,\r\n  Button,\r\n  LinearProgress,\r\n  Container,\r\n  CardMedia,\r\n  Grid,\r\n  TextField,\r\n  Paper,\r\n  CardActions,\r\n  Typography,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\n\r\nimport TopBarBack from \"../components/TopBarBack\";\r\nimport CameraIcon from \"@material-ui/icons/Camera\";\r\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport DoneIcon from \"@material-ui/icons/Done\";\r\nimport fbase from \"../services/FBase\";\r\n\r\nconst educations = [\r\n  { value: \"Before Pre Kindergarten\" },\r\n  { value: \"Pre Kindergarten\" },\r\n  { value: \"Kindergraten\" },\r\n  { value: \"1st Grade\" },\r\n  { value: \"2nd Grade\" },\r\n  { value: \"3rd Grade\" },\r\n  { value: \"4th Grade\" },\r\n  { value: \"5th Grade\" },\r\n  { value: \"6th Grade\" },\r\n  { value: \"7th Grade\" },\r\n  { value: \"8th Grade\" },\r\n  { value: \"9th Grade\" },\r\n  { value: \"10th Grade\" },\r\n  { value: \"11th Grade\" },\r\n  { value: \"12th Grade\" },\r\n  { value: \"Other\" },\r\n];\r\n\r\nconst shapes = {\r\n  Cube: [\r\n    \"Front Face\",\r\n    \"Top Face\",\r\n    \"Bottom Face\",\r\n    \"Right Face\",\r\n    \"Left Face\",\r\n    \"Back Face\",\r\n  ],\r\n\r\n  Cone: [\"Curved Face\", \"Base Face\"],\r\n  Sphere: [\"Circular Face\"],\r\n  Cylinder: [\"Top Face\", \"Curved Face\", \"Bottom Face\"],\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"space-around\",\r\n    overflow: \"hidden\",\r\n    width: \"100%\",\r\n  },\r\n  rootForm: {\r\n    \"& .MuiTextField-root\": {\r\n      width: \"22.5ch\",\r\n    },\r\n  },\r\n  view: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"fixed\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  cameraB: {\r\n    position: \"fixed\",\r\n    bottom: 3,\r\n  },\r\n  image: {\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    objectFit: \"contain\",\r\n  },\r\n  tools: {\r\n    textAlign: \"end\",\r\n  },\r\n}));\r\n\r\nconst Camera = ({ history }) => {\r\n  const classes = useStyles();\r\n  const videoConstraints = {\r\n    facingMode: { exact: \"environment\" },\r\n  };\r\n\r\n  const webcamRef = React.useRef(null);\r\n  const { currentUser } = useContext(AuthContext);\r\n  let [image, setImage] = useState(null);\r\n  const [showImage, setShowImage] = useState(null);\r\n  const [showCamera, setShowCamera] = useState(null);\r\n  const [showImage3D, setShowImage3D] = useState(null);\r\n  const [showCamera3D, setShowCamera3D] = useState(null);\r\n  const [showOptions, setShowOptions] = useState(true);\r\n  const [showForm, setShowForm] = useState(null);\r\n  const [artists, setArtists] = useState([]);\r\n  let [bar, setBar] = useState(null);\r\n  let [faces, setFaces] = useState([]);\r\n  const [type, setType] = useState(null);\r\n  const [all, setAll] = useState([]);\r\n  let [i, setI] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const fb = fbase.firestore();\r\n    const unsubscribe = fb\r\n      .collection(\"Users\")\r\n      .doc(currentUser.uid)\r\n      .collection(\"Children\")\r\n      .onSnapshot((snapshot) => {\r\n        const artistsData = [];\r\n        snapshot.forEach((docs) =>\r\n          artistsData.push({ ...docs.data(), id: docs.id })\r\n        );\r\n        setArtists(artistsData);\r\n        console.log(\"Read\");\r\n      });\r\n\r\n    return unsubscribe;\r\n  }, [currentUser.uid]);\r\n\r\n  const dataURLtoBlob = (dataurl) => {\r\n    var arr = dataurl.split(\",\"),\r\n      mime = arr[0].match(/:(.*?);/)[1],\r\n      bstr = atob(arr[1]),\r\n      n = bstr.length,\r\n      u8arr = new Uint8Array(n);\r\n    while (n--) {\r\n      u8arr[n] = bstr.charCodeAt(n);\r\n    }\r\n    return new Blob([u8arr], { type: mime });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setShowImage(null);\r\n  };\r\n\r\n  const handleClose3D = () => {\r\n    setShowImage3D(null);\r\n  };\r\n\r\n  const handleNext2D = () => {\r\n    setShowCamera(null);\r\n    setShowImage(null);\r\n    setShowForm(true);\r\n  };\r\n\r\n  const handleClick2D = () => {\r\n    setShowOptions(null);\r\n    setShowCamera(true);\r\n    setType(\"2D\");\r\n  };\r\n\r\n  const handleClick3D = (shape) => {\r\n    setShowOptions(null);\r\n    setShowCamera3D(true);\r\n    setType(shape);\r\n    if (shape === \"Cube\") {\r\n      faces.push(shapes.Cube);\r\n    } else if (shape === \"Cone\") {\r\n      faces.push(shapes.Cone);\r\n    } else if (shape === \"Sphere\") {\r\n      faces.push(shapes.Sphere);\r\n    } else {\r\n      faces.push(shapes.Cylinder);\r\n    }\r\n  };\r\n\r\n  const capture = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n\r\n    setImage(imageSrc);\r\n    setShowImage(true);\r\n  }, [webcamRef]);\r\n\r\n  const capture3D = React.useCallback(() => {\r\n    const imageSrc = webcamRef.current.getScreenshot();\r\n\r\n    setImage(imageSrc);\r\n    setShowImage3D(true);\r\n    //all.push(imageSrc);\r\n  }, [webcamRef]);\r\n\r\n  const handleNext3D = () => {\r\n    all.push(image);\r\n    if (type === \"Cone\") {\r\n      if (i === 1) {\r\n        setShowCamera3D(null);\r\n        setShowImage3D(null);\r\n        setShowForm(true);\r\n        console.log(all);\r\n      } else {\r\n        setShowForm(null);\r\n        setShowImage3D(null);\r\n        setI(i + 1);\r\n      }\r\n    } else if (type === \"Cube\") {\r\n      if (i === 5) {\r\n        setShowCamera3D(null);\r\n        setShowImage3D(null);\r\n        setShowForm(true);\r\n        console.log(all);\r\n      } else {\r\n        setShowForm(null);\r\n        setShowImage3D(null);\r\n        setI(i + 1);\r\n      }\r\n    } else if (type === \"Sphere\") {\r\n      setShowCamera3D(null);\r\n      setShowImage3D(null);\r\n      setShowForm(true);\r\n      console.log(all);\r\n    } else if (type === \"Cylinder\") {\r\n      if (i === 2) {\r\n        setShowCamera3D(null);\r\n        setShowImage3D(null);\r\n        setShowForm(true);\r\n        console.log(all);\r\n      } else {\r\n        setShowForm(null);\r\n        setShowImage3D(null);\r\n        setI(i + 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmition = async (event) => {\r\n    setBar(\r\n      <>\r\n        <LinearProgress />\r\n      </>\r\n    );\r\n    if (type === \"2D\") {\r\n      event.preventDefault();\r\n      const im = dataURLtoBlob(image);\r\n\r\n      const { artist, educationForm, subCategory, age } = event.target.elements;\r\n      const metadata = {\r\n        customMetadata: {\r\n          Artist: artist.value,\r\n          Age: age.value,\r\n          Education: educationForm.value,\r\n          SubCategory: subCategory.value,\r\n          Type: type,\r\n        },\r\n      };\r\n      const storageRef = fbase\r\n        .storage()\r\n        .ref(\"Users/\" + currentUser.uid + \"/Pictures\");\r\n      const fileRef = storageRef.child(new Date().getTime().toString());\r\n      await fileRef.put(im, metadata);\r\n      const url = await fileRef.getDownloadURL();\r\n      await fbase\r\n        .firestore()\r\n        .collection(\"Users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"Pictures\")\r\n        .add({\r\n          Url: url,\r\n        });\r\n\r\n      history.push(\"/\");\r\n    } else {\r\n      event.preventDefault();\r\n      const { artist, educationForm, subCategory, age } = event.target.elements;\r\n      const metadata = {\r\n        customMetadata: {\r\n          Artist: artist.value,\r\n          Age: age.value,\r\n          Education: educationForm.value,\r\n          SubCategory: subCategory.value,\r\n          Type: type,\r\n        },\r\n      };\r\n      let d = 0;\r\n      let id = null;\r\n\r\n      for (let c of all) {\r\n        c = dataURLtoBlob(c);\r\n        if (d === 0) {\r\n          d = 1;\r\n          const storageRef = fbase\r\n            .storage()\r\n            .ref(\"Users/\" + currentUser.uid + \"/Pictures\");\r\n          const fileRef = storageRef.child(new Date().getTime().toString());\r\n          await fileRef.put(c, metadata);\r\n\r\n          const url = await fileRef.getDownloadURL();\r\n          id = await fbase\r\n            .firestore()\r\n            .collection(\"Users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"Pictures\")\r\n            .add({\r\n              Url: url,\r\n            });\r\n        } else {\r\n          const storageRef1 = fbase\r\n            .storage()\r\n            .ref(\"Users/\" + currentUser.uid + \"/Pictures\");\r\n          const fileRef1 = storageRef1.child(new Date().getTime().toString());\r\n          await fileRef1.put(c, metadata);\r\n\r\n          const url1 = await fileRef1.getDownloadURL();\r\n\r\n          await fbase\r\n            .firestore()\r\n            .collection(\"Users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"Pictures\")\r\n            .doc(id.id)\r\n            .set(\r\n              {\r\n                [d]: url1,\r\n              },\r\n              { merge: true }\r\n            );\r\n          d = d + 1;\r\n        }\r\n      }\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TopBarBack></TopBarBack>\r\n\r\n      {showOptions ? (\r\n        <div>\r\n          <Container maxWidth=\"xs\">\r\n            <Box pt={25} textAlign=\"center\">\r\n              <Grid\r\n                container\r\n                spacing={3}\r\n                direction=\"row\"\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Grid item onClick={() => handleClick2D()} xs={6}>\r\n                  <Card>\r\n                    <CardActionArea>\r\n                      <CardMedia component=\"img\" height=\"192\" image={CAMERA1} />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          2D Art\r\n                        </Typography>\r\n                        <Typography\r\n                          variant=\"body2\"\r\n                          color=\"textSecondary\"\r\n                          component=\"p\"\r\n                        >\r\n                          2D art is flat such as a paper.\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions></CardActions>\r\n                  </Card>\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                  <Card>\r\n                    <CardMedia component=\"img\" height=\"150\" image={CAMERA2} />\r\n                    <CardContent>\r\n                      <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                        3D Art\r\n                      </Typography>\r\n                      <Typography\r\n                        variant=\"body2\"\r\n                        color=\"textSecondary\"\r\n                        component=\"p\"\r\n                      >\r\n                        3D art has volume such as a sculpture.\r\n                      </Typography>\r\n                    </CardContent>\r\n\r\n                    <Button\r\n                      variant=\"text\"\r\n                      onClick={() => handleClick3D(\"Cube\")}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Cube\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"text\"\r\n                      onClick={() => handleClick3D(\"Cone\")}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Cone\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"text\"\r\n                      onClick={() => handleClick3D(\"Sphere\")}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Sphere\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"text\"\r\n                      onClick={() => handleClick3D(\"Cylinder\")}\r\n                      size=\"small\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Cylinder\r\n                    </Button>\r\n                  </Card>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Container>\r\n        </div>\r\n      ) : null}\r\n\r\n      {showForm ? (\r\n        <div>\r\n          {bar}\r\n          <Container maxWidth=\"xs\">\r\n            <Box pt={10} textAlign=\"right\">\r\n              <Paper>\r\n                <form className={classes.rootForm} onSubmit={handleSubmition}>\r\n                  <Grid\r\n                    container\r\n                    direction=\"column\"\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    spacing={3}\r\n                  >\r\n                    <Grid item>\r\n                      <TextField\r\n                        className={classes.size}\r\n                        select\r\n                        margin=\"normal\"\r\n                        id=\"artist\"\r\n                        label=\" Select Artist\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"Who made it\"\r\n                        InputLabelProps={{ required: true, shrink: true }}\r\n                        SelectProps={{\r\n                          native: true,\r\n                        }}\r\n                      >\r\n                        {artists.map((option) => (\r\n                          <option key={option.id} value={option.id}>\r\n                            {option.Name}\r\n                          </option>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        select\r\n                        margin=\"normal\"\r\n                        id=\"educationForm\"\r\n                        label=\"Select Education Stage\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"Made in which Stage\"\r\n                        InputLabelProps={{ required: true, shrink: true }}\r\n                        SelectProps={{\r\n                          native: true,\r\n                        }}\r\n                      >\r\n                        {educations.map((option) => (\r\n                          <option key={option.value} value={option.value}>\r\n                            {option.value}\r\n                          </option>\r\n                        ))}\r\n                      </TextField>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        id=\"subCategory\"\r\n                        label=\"SubCategory\"\r\n                        variant=\"outlined\"\r\n                        helperText=\"Example: Cat \"\r\n                        required\r\n                        margin=\"normal\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <TextField\r\n                        id=\"age\"\r\n                        type=\"number\"\r\n                        label=\"Age\"\r\n                        variant=\"outlined\"\r\n                        required\r\n                        margin=\"normal\"\r\n                        InputProps={{\r\n                          inputProps: {\r\n                            min: 1,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                      <Fab color=\"primary\" type=\"submit\">\r\n                        <DoneIcon />\r\n                      </Fab>\r\n                    </Grid>\r\n                  </Grid>\r\n                </form>\r\n              </Paper>\r\n            </Box>\r\n          </Container>\r\n        </div>\r\n      ) : null}\r\n\r\n      {showCamera ? (\r\n        <Box className={classes.root}>\r\n          <Webcam\r\n            ref={webcamRef}\r\n            videoConstraints={videoConstraints}\r\n            screenshotFormat=\"image/jpeg\"\r\n            audio={false}\r\n           // forceScreenshotSourceSize=\"true\"\r\n          />\r\n\r\n          <Fab className={classes.cameraB} onClick={capture} color=\"primary\">\r\n            <CameraIcon />\r\n          </Fab>\r\n        </Box>\r\n      ) : null}\r\n\r\n      {showImage ? (\r\n        <Box className={classes.view}>\r\n          <div className={classes.tools}>\r\n            <IconButton\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={() => handleNext2D()}\r\n            >\r\n              <CheckCircleIcon color=\"primary\"> </CheckCircleIcon>\r\n            </IconButton>\r\n            <a href={image} download>\r\n              <IconButton\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={() => handleClose()}\r\n              >\r\n                <SaveAltIcon color=\"primary\"> </SaveAltIcon>\r\n              </IconButton>\r\n            </a>\r\n\r\n            <IconButton\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={() => handleClose()}\r\n            >\r\n              <ClearIcon color=\"primary\"> </ClearIcon>\r\n            </IconButton>\r\n          </div>\r\n          <img className={classes.image} src={image} alt=\"big pic\" />\r\n        </Box>\r\n      ) : null}\r\n\r\n      {showCamera3D ? (\r\n        <Box className={classes.root}>\r\n          <Typography>Take a picture of the art's {faces[0][i]} </Typography>\r\n          <Webcam\r\n            ref={webcamRef}\r\n            videoConstraints={videoConstraints}\r\n            screenshotFormat=\"image/jpeg\"\r\n            audio={false}\r\n            forceScreenshotSourceSize=\"true\"\r\n          />\r\n\r\n          <Fab className={classes.cameraB} onClick={capture3D} color=\"primary\">\r\n            <CameraIcon />\r\n          </Fab>\r\n        </Box>\r\n      ) : null}\r\n\r\n      {showImage3D ? (\r\n        <Box className={classes.view}>\r\n          <div className={classes.tools}>\r\n            <IconButton\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={() => handleNext3D()}\r\n            >\r\n              <CheckCircleIcon color=\"primary\"> </CheckCircleIcon>\r\n            </IconButton>\r\n            <a href={image} download>\r\n              <IconButton\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={() => handleClose3D()}\r\n              >\r\n                <SaveAltIcon color=\"primary\"> </SaveAltIcon>\r\n              </IconButton>\r\n            </a>\r\n\r\n            <IconButton\r\n              aria-controls=\"menu-appbar\"\r\n              aria-haspopup=\"true\"\r\n              onClick={() => handleClose3D()}\r\n            >\r\n              <ClearIcon color=\"primary\"> </ClearIcon>\r\n            </IconButton>\r\n          </div>\r\n          <img className={classes.image} src={image} alt=\"big pic\" />\r\n        </Box>\r\n      ) : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Camera;\r\n","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\NavBar.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\TopBar.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\TopBarBack.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\CreateArtist.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Upload.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Upload2D.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\pages\\Upload3D.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\Modal.js",["93","94"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport fbase from \"../services/FBase\";\r\nimport { withRouter } from \"react-router\";\r\nimport {\r\n  makeStyles,\r\n  Box,\r\n  Drawer,\r\n  List,\r\n  ListItemText,\r\n  Divider,\r\n  ListItem,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContentText,\r\n  DialogActions,\r\n  DialogContent,\r\n  Button,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport { AuthContext } from \"../services/Auth\";\r\nimport Ar from \"../components/Ar\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport ClearIcon from \"@material-ui/icons/Clear\";\r\nimport arIcon from \"../assets/img/arIcon.svg\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { ContactSupportOutlined } from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n  view: {\r\n    top: \"0\",\r\n    left: \"0\",\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    position: \"fixed\",\r\n    backgroundColor: \"black\",\r\n  },\r\n  image: {\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n    objectFit: \"contain\",\r\n  },\r\n  tools: {\r\n    textAlign: \"end\",\r\n  },\r\n  imageC: {\r\n    width: \"100%\",\r\n    height: \"90%\",\r\n    display: \"flex\",\r\n  },\r\n});\r\n\r\nconst Modal = ({ selected, Close, CloseGallery, history }) => {\r\n  const { currentUser } = useContext(AuthContext);\r\n  const classes = useStyles();\r\n  const [metaData, setMetaData] = useState({});\r\n  const [parts, setParts] = useState([]);\r\n  const [open, setOpen] = useState(false);\r\n  const [state, setState] = React.useState({\r\n    bottom: false,\r\n  });\r\n  const [ar, setAr] = useState(null);\r\n  const [modal, setmodal] = useState(true);\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    ) {\r\n      return;\r\n    }\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const handleClose = () => {\r\n    Close(null);\r\n  };\r\n\r\n  const handleAr = () => {\r\n    CloseGallery(null);\r\n    setmodal(null);\r\n    setAr(true);\r\n  };\r\n\r\n  const handleArExit = () => {\r\n    // CloseGallery(true);\r\n    //setmodal(true);\r\n    //setAr(null);\r\n    window.location.reload();\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDialogClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    handleDialogClose();\r\n\r\n    if (metaData[\"Type\"] === \"2D\" || metaData[\"Type\"] === \"Sphere\") {\r\n      const storageRef = fbase.storage().refFromURL(selected.Url);\r\n      storageRef.delete();\r\n      const fb = fbase.firestore();\r\n      fb.collection(\"Users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"Pictures\")\r\n        .doc(selected.id)\r\n        .delete();\r\n    } else {\r\n      for (var key in parts) {\r\n        var val = parts[key];\r\n        const storageRef = fbase.storage().refFromURL(val);\r\n        storageRef.delete();\r\n      }\r\n      const fb = fbase.firestore();\r\n      fb.collection(\"Users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"Pictures\")\r\n        .doc(selected.id)\r\n        .delete();\r\n    }\r\n\r\n    Close(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let data = {};\r\n    let array = [];\r\n    let unsubscribe = null;\r\n\r\n    const storageRef = fbase.storage().refFromURL(selected.Url);\r\n    storageRef.getMetadata().then((metadata) => {\r\n      for (var key in metadata.customMetadata) {\r\n        if (key === \"Artist\") {\r\n          let name = [];\r\n          const fb0 = fbase.firestore();\r\n          fb0\r\n            .collection(\"Users\")\r\n            .doc(currentUser.uid)\r\n            .collection(\"Children\")\r\n            .doc(metadata.customMetadata[key])\r\n            .get()\r\n            .then((doc) => {\r\n              name.push(doc.data().Name);\r\n            });\r\n          data[key] = name;\r\n        } else {\r\n          var value = metadata.customMetadata[key];\r\n          data[key] = value;\r\n        }\r\n      }\r\n      setMetaData(data);\r\n    });\r\n    console.log(555);\r\n\r\n    if (data.Type !== \"2D\" && data.Type !== \"Sphere\") {\r\n      const fb = fbase.firestore();\r\n      unsubscribe = fb\r\n        .collection(\"Users\")\r\n        .doc(currentUser.uid)\r\n        .collection(\"Pictures\")\r\n        .doc(selected.id)\r\n        .get()\r\n        .then((doc) => {\r\n          for (const [key, value] of Object.entries(doc.data())) {\r\n            array.push(value);\r\n          }\r\n          setParts(array);\r\n        });\r\n    }\r\n    return unsubscribe;\r\n  }, [currentUser.uid, selected]);\r\n\r\n  return (\r\n    <div>\r\n      {modal ? (\r\n        <div>\r\n          <Box className={classes.view}>\r\n            <div className={classes.tools}>\r\n              <IconButton onClick={() => handleAr()}>\r\n                <img src={arIcon} alt=\"\" />\r\n              </IconButton>\r\n\r\n              <React.Fragment>\r\n                <IconButton\r\n                  aria-controls=\"menu-appbar\"\r\n                  aria-haspopup=\"true\"\r\n                  onClick={toggleDrawer(\"bottom\", true)}\r\n                >\r\n                  <InfoIcon color=\"primary\"> </InfoIcon>\r\n                </IconButton>\r\n                <Drawer\r\n                  anchor={\"bottom\"}\r\n                  open={state[\"bottom\"]}\r\n                  onClose={toggleDrawer(\"bottom\", false)}\r\n                >\r\n                  <List>\r\n                    {Object.entries(metaData).map(([key, value]) => (\r\n                      <>\r\n                        <ListItem>\r\n                          <ListItemText\r\n                            key={key}\r\n                            primary={\"\" + key + \":  \" + value}\r\n                          />\r\n                        </ListItem>\r\n                        <Divider key={key + \"1\"} />\r\n                      </>\r\n                    ))}\r\n                  </List>\r\n                </Drawer>\r\n              </React.Fragment>\r\n\r\n              <IconButton onClick={() => handleClickOpen()}>\r\n                <DeleteIcon color=\"primary\"></DeleteIcon>\r\n              </IconButton>\r\n\r\n              <IconButton\r\n                aria-controls=\"menu-appbar\"\r\n                aria-haspopup=\"true\"\r\n                onClick={() => handleClose()}\r\n              >\r\n                <ClearIcon color=\"primary\"> </ClearIcon>\r\n              </IconButton>\r\n            </div>\r\n            <div className={classes.imageC}>\r\n              <img className={classes.image} src={selected.Url} alt=\"big pic\" />\r\n            </div>\r\n          </Box>\r\n        </div>\r\n      ) : null}\r\n\r\n      {ar ? (\r\n        <div>\r\n          <Ar\r\n            Art3D={parts}\r\n            Art={selected.Url}\r\n            Type={metaData.Type}\r\n            Return={handleArExit}\r\n          />\r\n        </div>\r\n      ) : null}\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleDialogClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Art Deletion\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n              Are you sure you want to delete this artwork? This action can't be\r\n              undone\r\n            </DialogContentText>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button\r\n              variant=\"outlined\"\r\n              onClick={handleDialogClose}\r\n              color=\"primary\"\r\n            >\r\n              Cancel\r\n            </Button>\r\n            <Button onClick={() => handleDelete()} color=\"primary\" autoFocus>\r\n              Delete\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Modal);\r\n","C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\components\\Ar.js",[],"C:\\Users\\duart\\Desktop\\reactjs-da-vincis-fridge\\src\\serviceWorkerRegistration.js",[],{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":122,"column":15,"nodeType":"101","messageId":"102","endLine":122,"endColumn":23},{"ruleId":"99","severity":1,"message":"103","line":124,"column":15,"nodeType":"101","messageId":"102","endLine":124,"endColumn":21},{"ruleId":"99","severity":1,"message":"104","line":26,"column":10,"nodeType":"101","messageId":"102","endLine":26,"endColumn":32},{"ruleId":"99","severity":1,"message":"105","line":168,"column":23,"nodeType":"101","messageId":"102","endLine":168,"endColumn":26},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"no-unused-vars","'setFaces' is assigned a value but never used.","Identifier","unusedVar","'setAll' is assigned a value but never used.","'ContactSupportOutlined' is defined but never used.","'key' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]